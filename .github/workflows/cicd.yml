name: CI – Robot + Allure + Jira

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  robot-tests:
    runs-on: windows-latest
    permissions:
      contents: write       # necessário para gh-pages
      actions: write

    steps:
      # 1) Clona o repositório
      - name: Checkout
        uses: actions/checkout@v3

      # 2) Configura Python 3.11
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3) Instala dependências + allure-robotframework
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-robotframework

      # 4) Instala Java e Allure CLI
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Install Allure CLI
        run: choco install allure.commandline --version 2.21.0 -y

      # 5) Inicializa Browser para Robot Framework
      - name: Init Playwright browsers
        run: rfbrowser init

      # 6) Executa testes com listener Allure
      - name: Run Robot Framework
        run: |
          robot \
            --listener allure_robotframework \
            -d results/output \
            "Testes automatizados/tests"

      # 7) Gera relatório Allure
      - name: Generate Allure report
        if: always()
        run: |
          allure generate results/output/allure -o results/report --clean

      # 8) Prepara e publica o relatório no GitHub Pages
      - name: Prepare gh-pages branch
        if: always()
        run: |
          # Cria a branch gh-pages se não existir
          if ! git ls-remote --exit-code origin gh-pages; then
            git checkout --orphan gh-pages
            git rm -rf .
            git commit --allow-empty -m "Initializing gh-pages"
            git push origin gh-pages
          fi
          # Faz checkout da gh-pages em 'pages'
          git fetch origin gh-pages:gh-pages
          git worktree add pages gh-pages

      - name: Build Allure pages
        if: always()
        uses: simple-elf/allure-report-action@v1.7
        with:
          gh_pages: pages
          allure_results: results/output/allure
          allure_history: pages/history

      - name: Publish to gh-pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: pages

      # 9) Define e exibe a URL do relatório
      - name: Set Report URL
        if: always()
        run: |
          echo "REPORT_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_OUTPUT

      - name: Show Report URL
        if: always()
        run: echo "✅ Relatório Allure disponível em ${{ steps.set_report_url.outputs.REPORT_URL }}"

      # 10) Fallback: artefato do Allure
      - name: Upload Allure report (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: results/report

      # 11) Autentica no Jira
      - name: Jira - Login
        if: always()
        uses: atlassian/gajira-login@v3.0.0
        with:
          jira-base-url: ${{ secrets.JIRA_URL }}
          jira-user-email: ${{ secrets.JIRA_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}

      # 12) Cria issue no Jira se houver falha
      - name: Jira - Create bug on failure
        if: failure()
        uses: atlassian/gajira-create@v3.0.0
        with:
          project-key: ${{ secrets.JIRA_PROJECT_KEY }}
          issuetype: Bug
          summary: >
            [CI][Robot] Test suite failed – Run #${{ github.run_number }}
          description: |
            **Workflow:** ${{ github.workflow }}
            **Run ID:** ${{ github.run_id }}
            **Branch:** ${{ github.ref_name }}
            **Relatório Allure:** ${{ steps.set_report_url.outputs.REPORT_URL }}
